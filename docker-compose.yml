version: '3'

services:
  frontend:
    build:
      context: .
      dockerfile: ./Docker/frontend.dockerfile
    environment:
      - BACKEND_URL=http://backend:${BACKEND_PORT}
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"

  backend:
    build: 
      context: .
      dockerfile: ./Docker/backend.dockerfile
    depends_on:
      - db
      - filestorage
    environment:
      - PORT=${BACKEND_PORT}
      - MYSQL_PORT=${MYSQL_PORT}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - FILE_STORAGE_PORT=${FILE_STORAGE_PORT}
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_BUCKET_NAME=${MINIO_BUCKET_NAME}
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    restart: unless-stopped

  filestorage:
    build: 
      context: .
      dockerfile: ./Docker/filestorage.dockerfile
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_BUCKET_NAME=${MINIO_BUCKET_NAME}
      - PORT=${FILE_STORAGE_PORT}
    ports:
      - "${FILE_STORAGE_PORT}:${FILE_STORAGE_PORT}"
      - "9001:9001"
    restart: unless-stopped

  db:
    build: 
      context: .
      dockerfile: ./Docker/db.dockerfile
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    #volumes:
    #  - db-data:/var/lib/mysql
    ports:
      - "3306:3306"
    restart: unless-stopped

  ocr:
    build:
      context: .
      dockerfile: ./Docker/ocr.dockerfile
    environment:
      - BACKEND_URL=http://backend:${BACKEND_PORT}
    depends_on:
      - backend
    ports:
      - "3030:3030"
    restart: unless-stopped
    
#volumes:
#  db-data: